{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kavindulakshitha/Desktop/PITRE/src/SalaryInformation.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { useRef, useState } from \"react\";\nexport default function SalaryInformation(props) {\n  _s();\n\n  const [companyNameRef, monthsRef, totalFestivalsRef, inputTypeRef] = [useRef(), useRef(), useRef(), useRef()];\n  const [companyInfoRef, salaryInputRef] = [useRef(), useRef()];\n  const [basicRef, houseRef, medicalRef, conveyanceRef] = [useRef(), useRef(), useRef(), useRef()];\n  const [lfaRef, festivalRef, otherTaxableRef] = [useRef(), useRef(), useRef()];\n  const initialCompanyInfo = {\n    company: '',\n    months: 12,\n    festivals: 2,\n    inputType: 'monthly'\n  };\n  const [values, setValues] = useState(initialCompanyInfo);\n\n  const handleChange = (name, value) => {\n    setValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const resetForms = () => {\n    salaryInputRef.current.reset(); // for some reasons, company info refs were not working. IDK\n\n    setValues({ ...initialCompanyInfo\n    });\n  };\n\n  const calculateTaxableOf = (basic, percent, max, received) => {\n    const atMax = percent ? Math.min(basic * percent, max) : max;\n    return received > atMax ? received - atMax : 0;\n  };\n\n  const calculateMaxExemptionOf = (basic, percent, max, received) => {\n    const atMax = percent ? Math.min(basic * percent, max) : max;\n    return received > atMax ? atMax : received;\n  };\n\n  const calculateTaxableAmount = () => {\n    if (!values['company']) {\n      alert('Add a company name.');\n      return false;\n    }\n\n    let festivalMultiplier = 1;\n    let basicMultiplier = 1;\n\n    if (values['inputType'] === 'monthly') {\n      festivalMultiplier = values['festivals'];\n      basicMultiplier = values['months'];\n    } // already converted to yearly\n\n\n    const [basic, house, medical, conveyance, lfa] = [basicRef, houseRef, medicalRef, conveyanceRef, lfaRef].map(i => parseInt(i.current.value || 0, 10) * basicMultiplier);\n    const festival = parseInt(festivalRef.current.value || 0, 10) * festivalMultiplier;\n    const others = parseInt(otherTaxableRef.current.value || 0, 10);\n\n    if (!basic) {\n      alert('Basic salary is zero. Add some data.');\n      return;\n    }\n    /**\n     * As the payments are already converted to yearly,\n     * Change the max values to yearly as well.\n     */\n\n\n    const [houseMax, medicalMax, conveyanceMax] = [25000, 10000, 2500].map(i => i * monthsRef.current.value);\n    const amounts = {\n      id: new Date().getTime(),\n      name: values['company'],\n      months: values['months'],\n      festivals: values['festivals'],\n      inputType: values['inputType'],\n      basic: {\n        yearly: basic,\n        exempted: 0,\n        taxable: basic\n      },\n      house: {\n        yearly: house,\n        exempted: calculateMaxExemptionOf(basic, 0.5, houseMax, house),\n        taxable: calculateTaxableOf(basic, 0.5, houseMax, house)\n      },\n      medical: {\n        yearly: medical,\n        exempted: calculateMaxExemptionOf(basic, 0.1, medicalMax, medical),\n        taxable: calculateTaxableOf(basic, 0.1, medicalMax, medical)\n      },\n      conveyance: {\n        yearly: conveyance,\n        exempted: calculateMaxExemptionOf(basic, 0, conveyanceMax, conveyance),\n        taxable: calculateTaxableOf(basic, 1, conveyanceMax, conveyance)\n      },\n      lfa: {\n        yearly: lfa,\n        exempted: lfa,\n        taxable: 0\n      },\n      festival: {\n        yearly: festival,\n        exempted: 0,\n        taxable: festival\n      },\n      others: {\n        yearly: others,\n        exempted: 0,\n        taxable: others\n      }\n    };\n    amounts['gross'] = amounts.festival.yearly + amounts.others.yearly + amounts.basic.yearly + amounts.house.yearly + amounts.medical.yearly + amounts.conveyance.yearly + amounts.lfa.yearly;\n    amounts['net_exempted'] = amounts.festival.exempted + amounts.others.exempted + amounts.basic.exempted + amounts.house.exempted + amounts.medical.exempted + amounts.conveyance.exempted + amounts.lfa.exempted;\n    amounts['net_taxable'] = amounts.festival.taxable + amounts.others.taxable + amounts.basic.taxable + amounts.house.taxable + amounts.medical.taxable + amounts.conveyance.taxable + amounts.lfa.taxable;\n    props.handleInputChange(\"companies\", amounts);\n    resetForms();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: companyInfoRef,\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: companyNameRef,\n              value: values['company'],\n              onChange: e => handleChange('company', e.target.value.trim()),\n              placeholder: \"Company name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Company name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              value: values['months'],\n              ref: monthsRef,\n              onChange: e => handleChange('months', e.target.value),\n              placeholder: \"Months you've worked for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Number of months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              value: values['festivals'],\n              ref: totalFestivalsRef,\n              onChange: e => handleChange('festivals', e.target.value),\n              placeholder: \"No of Festivals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Number of festivals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              ref: inputTypeRef,\n              value: values['inputType'],\n              onChange: e => handleChange('inputType', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"monthly\",\n                children: \"Calculate from Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yearly\",\n                children: \"Calculate for specified months\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Calculation type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"12\",\n      style: {\n        display: values['company'] ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: salaryInputRef,\n        onSubmit: e => {\n          e.preventDefault();\n          calculateTaxableAmount();\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: [\"Earnings\", values['company'] ? ` at \"${values['company']}\"` : '', \" - [\", values['months'], \" months] - [\", values['festivals'], \" festivals]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"As\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Received (BDT.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Basic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: basicRef,\n                  placeholder: \"Basic pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"House rent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: houseRef,\n                  placeholder: \"House rent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Medical Allowance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: medicalRef,\n                  placeholder: \"Medical Allowance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Conveyance Allowance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: conveyanceRef,\n                  placeholder: \"Conveyance Allowance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Leave Fare Assistance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  ref: lfaRef,\n                  className: \"form-control-sm\",\n                  placeholder: \"LFA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Festival Bonus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: festivalRef,\n                  placeholder: \"Festival Bonus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Other Taxable Bonus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: otherTaxableRef,\n                  placeholder: \"Other total Taxable Bonus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetForms,\n          variant: \"warning\",\n          size: \"sm\",\n          className: \"float-left\",\n          children: \"Reset above data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"sm\",\n          variant: \"primary\",\n          className: \"float-right\",\n          children: [\"Calculate \", values['company'] ? 'for ' + values['company'] : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SalaryInformation, \"P2HaBRBCvH7C6EHf3bFokntcQI4=\");\n\n_c = SalaryInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryInformation\");","map":{"version":3,"sources":["/Users/kavindulakshitha/Desktop/PITRE/src/SalaryInformation.js"],"names":["Button","Col","Form","Row","Table","useRef","useState","SalaryInformation","props","companyNameRef","monthsRef","totalFestivalsRef","inputTypeRef","companyInfoRef","salaryInputRef","basicRef","houseRef","medicalRef","conveyanceRef","lfaRef","festivalRef","otherTaxableRef","initialCompanyInfo","company","months","festivals","inputType","values","setValues","handleChange","name","value","prevState","resetForms","current","reset","calculateTaxableOf","basic","percent","max","received","atMax","Math","min","calculateMaxExemptionOf","calculateTaxableAmount","alert","festivalMultiplier","basicMultiplier","house","medical","conveyance","lfa","map","i","parseInt","festival","others","houseMax","medicalMax","conveyanceMax","amounts","id","Date","getTime","yearly","exempted","taxable","handleInputChange","e","preventDefault","target","trim","display"],"mappings":"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","sourcesContent":["import {Button, Col, Form, Row, Table} from \"react-bootstrap\";\nimport {useRef, useState} from \"react\";\n\nexport default function SalaryInformation(props) {\n    const [companyNameRef, monthsRef, totalFestivalsRef, inputTypeRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [companyInfoRef, salaryInputRef] = [useRef(), useRef()];\n\n    const [basicRef, houseRef, medicalRef, conveyanceRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [lfaRef, festivalRef, otherTaxableRef] = [useRef(), useRef(), useRef()];\n\n    const initialCompanyInfo = {\n        company: '',\n        months: 12,\n        festivals: 2,\n        inputType: 'monthly'\n    };\n    const [values, setValues] = useState(initialCompanyInfo);\n\n    const handleChange = (name, value) => {\n        setValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const resetForms = () => {\n        salaryInputRef.current.reset();\n        // for some reasons, company info refs were not working. IDK\n        setValues({...initialCompanyInfo});\n    }\n\n    const calculateTaxableOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? received - atMax : 0;\n    }\n\n    const calculateMaxExemptionOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? atMax : received;\n    }\n\n    const calculateTaxableAmount = () => {\n\n        if (!values['company']) {\n            alert('Add a company name.');\n            return false;\n        }\n\n        let festivalMultiplier = 1;\n        let basicMultiplier = 1;\n        if (values['inputType'] === 'monthly') {\n            festivalMultiplier = values['festivals'];\n            basicMultiplier = values['months'];\n        }\n\n        // already converted to yearly\n        const [basic, house, medical, conveyance, lfa] = [\n            basicRef,\n            houseRef,\n            medicalRef,\n            conveyanceRef,\n            lfaRef,\n        ].map((i) => parseInt(i.current.value || 0, 10) * basicMultiplier);\n        const festival = parseInt(festivalRef.current.value || 0, 10) * festivalMultiplier;\n        const others = parseInt(otherTaxableRef.current.value || 0, 10);\n\n        if (!basic) {\n            alert('Basic salary is zero. Add some data.');\n            return;\n        }\n\n        /**\n         * As the payments are already converted to yearly,\n         * Change the max values to yearly as well.\n         */\n        const [houseMax, medicalMax, conveyanceMax] = [25000, 10000, 2500].map(i => i * monthsRef.current.value);\n\n        const amounts = {\n            id: new Date().getTime(),\n            name: values['company'],\n            months: values['months'],\n            festivals: values['festivals'],\n            inputType: values['inputType'],\n            basic: {\n                yearly: basic,\n                exempted: 0,\n                taxable: basic,\n            },\n            house: {\n                yearly: house,\n                exempted: calculateMaxExemptionOf(basic, 0.5, houseMax, house),\n                taxable: calculateTaxableOf(basic, 0.5, houseMax, house),\n            },\n            medical: {\n                yearly: medical,\n                exempted: calculateMaxExemptionOf(basic, 0.1, medicalMax, medical),\n                taxable: calculateTaxableOf(basic, 0.1, medicalMax, medical),\n            },\n            conveyance: {\n                yearly: conveyance,\n                exempted: calculateMaxExemptionOf(basic, 0, conveyanceMax, conveyance),\n                taxable: calculateTaxableOf(basic, 1, conveyanceMax, conveyance),\n            },\n            lfa: {\n                yearly: lfa,\n                exempted: lfa,\n                taxable: 0,\n            },\n            festival: {\n                yearly: festival,\n                exempted: 0,\n                taxable: festival,\n            },\n            others: {\n                yearly: others,\n                exempted: 0,\n                taxable: others\n            },\n        }\n\n\n        amounts['gross'] = amounts.festival.yearly + amounts.others.yearly +\n            amounts.basic.yearly + amounts.house.yearly +\n            amounts.medical.yearly + amounts.conveyance.yearly + amounts.lfa.yearly;\n\n        amounts['net_exempted'] = amounts.festival.exempted + amounts.others.exempted +\n            amounts.basic.exempted + amounts.house.exempted +\n            amounts.medical.exempted + amounts.conveyance.exempted + amounts.lfa.exempted;\n\n        amounts['net_taxable'] = amounts.festival.taxable + amounts.others.taxable +\n            amounts.basic.taxable + amounts.house.taxable +\n            amounts.medical.taxable + amounts.conveyance.taxable + amounts.lfa.taxable;\n\n        props.handleInputChange(\"companies\", amounts);\n        resetForms();\n    }\n\n    return <Row>\n        <Col xs=\"12\">\n            {/*COMPANY INFORMATION FORM*/}\n            <Form ref={companyInfoRef} onSubmit={e => e.preventDefault()}>\n                <Form.Row>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control ref={companyNameRef} value={values['company']}\n                                      onChange={(e) => handleChange('company', e.target.value.trim())}\n                                      placeholder=\"Company name\"/>\n                        <Form.Text className=\"text-info\">\n                            Company name\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['months']} ref={monthsRef}\n                                      onChange={(e) => handleChange('months', e.target.value)}\n                                      placeholder=\"Months you've worked for\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of months\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-2\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['festivals']} ref={totalFestivalsRef}\n                                      onChange={(e) => handleChange('festivals', e.target.value)}\n                                      placeholder=\"No of Festivals\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of festivals\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-4\">\n                        <Form.Control as=\"select\" ref={inputTypeRef} value={values['inputType']}\n                                      onChange={(e) => handleChange('inputType', e.target.value)}>\n                            <option value=\"monthly\">Calculate from Monthly</option>\n                            <option value=\"yearly\">Calculate for specified months</option>\n                        </Form.Control>\n                        <Form.Text className=\"text-info\">\n                            Calculation type\n                        </Form.Text>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n        </Col>\n        {/* Salary Information */}\n        <Col xs=\"12\" style={{display: values['company'] ? 'block' : 'none'}}>\n            <Form ref={salaryInputRef} onSubmit={e => {\n                e.preventDefault();\n                calculateTaxableAmount();\n            }}>\n                <Table size=\"sm\">\n                    <caption>\n                        Earnings\n                        {values['company'] ? ` at \"${values['company']}\"` : ''} -\n                        [{values['months']} months] -\n                        [{values['festivals']} festivals]\n                    </caption>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>As</th>\n                            <th>Received (BDT.)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Basic</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={basicRef} placeholder=\"Basic pay\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>House rent</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={houseRef} placeholder=\"House rent\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Medical Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={medicalRef} placeholder=\"Medical Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Conveyance Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={conveyanceRef} placeholder=\"Conveyance Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Leave Fare Assistance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" ref={lfaRef} className=\"form-control-sm\"\n                                              placeholder=\"LFA\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Festival Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={festivalRef} placeholder=\"Festival Bonus\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Other Taxable Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={otherTaxableRef} placeholder=\"Other total Taxable Bonus\"/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <Button onClick={resetForms} variant=\"warning\" size=\"sm\" className=\"float-left\">\n                    Reset above data\n                </Button>\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" className=\"float-right\">\n                    Calculate {values['company'] ? 'for ' + values['company'] : ''}\n                </Button>\n            </Form>\n        </Col>\n    </Row>;\n}"]},"metadata":{},"sourceType":"module"}